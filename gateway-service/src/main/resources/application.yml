server:
  port: 60000
  forward-headers-strategy: framework #добавление инфы для конечного сервиса, что запрос был спроксирован
  error:
    include-message: always

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: false
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 1
    lease-expiration-duration-in-seconds: 1

spring:
  application:
    name: gateway-ms

  security:
    oauth2:
      #для валидации токенов
      resourceserver:
        jwt:
          issuer-uri: ${keycloak.auth-server-uri}/realms/${keycloak.realm}
#          jwk-set-uri: ${keycloak.auth-server-uri}/realms/${keycloak.realm}/protocol/openid-connect/certs

  cloud:
    loadbalancer:
      cache:
        enabled: true
    gateway:
      discovery:
        locator:
          enabled: true #маршрутизация на основе Eureka
      routes:
        - id: auth
          uri: ${keycloak.auth-server-uri}
          predicates:
          - Path=/openid-connect/**
          filters:
          - RewritePath=/openid-connect,/realms/${keycloak.realm}/protocol/openid-connect

        - id: portal
          uri: lb://portal-ms
          predicates:
            - Path=/portal/**

        - id: driver
          uri: lb://driver-ms
          predicates:
            - Path=/driver-ms/**

        - id: dwh
          uri: lb://dwh-ms
          predicates:
            - Path=/dwh-ms/**

        - id: logist
          uri: lb://logist-ms
          predicates:
            - Path=/logist/**

keycloak:
  auth-server-uri: http://localhost:8080
  realm: gnivc
  resource: gnivc-client
  client-key-password: D6r2AZ8s8eO3vbMrcmWOijJxX7mvadFj
  token-store: /realms/${keycloak.realm}/protocol/openid-connect/token
